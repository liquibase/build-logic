name: Build & Deploy extension jar to GPM
# This action will download an extension from github repo, build it, and deploy it to GPM as version master-SNAPSHOT.

on:
  workflow_call:
    inputs:
      extension:
        description: "Extension to build"
        required: true
        default: ""
        type: string
      groupId:
        description: "Maven Group ID"
        default: "org.liquibase.ext"
        type: string
  workflow_dispatch:
    inputs:
      extension:
        description: "Extension to build"
        required: true
        default: ""
        type: string

# Add permissions for the default GITHUB_TOKEN
permissions:
  contents: read
  packages: write

jobs:
  delete-dependency-packages:
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:
      - uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ inputs.groupId }}.${{ inputs.extension }}
          package-type: "maven"
          min-versions-to-keep: 5 # Keep the last 5 versions so we don't break simultaneous builds
          delete-only-pre-release-versions: true

  build-and-deploy-extensions:
    needs: [delete-dependency-packages]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GIT_USERNAME: "liquibot"
      GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Dependencies
        run: |
          git config --global credential.helper store
          echo "https://$GIT_USERNAME:$GIT_PASSWORD@github.com" > ~/.git-credentials
          git clone https://github.com/liquibase/${{ inputs.extension }}.git ${{ inputs.extension }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"
          cache: "maven"
          server-id: github # Used for the settings.xml server configuration
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SECRET }}
          gpg-passphrase: GPG_PASSPHRASE
        env:
          MAVEN_USERNAME: ${{ github.actor }}
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}

      # Remove the maven-settings-xml-action step since setup-java already configures Maven

      - name: Build and deploy Extension to GPM
        env:
          GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}
          MAVEN_USERNAME: ${{ github.actor }}
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ${{ inputs.extension }}
          EXTENSION_VERSION="master-SNAPSHOT"
          mvn versions:set -DnewVersion=$EXTENSION_VERSION
          mvn clean install -DskipTests

          # Add repository settings to the .m2/settings.xml
          cat > ~/.m2/repository-settings.xml << EOF
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>${MAVEN_USERNAME}</username>
                <password>${MAVEN_PASSWORD}</password>
              </server>
            </servers>
          </settings>
          EOF

          # Deploy using explicit settings file
          mvn deploy:deploy-file \
            -s ~/.m2/repository-settings.xml \
            -Dfile=./target/${{ inputs.extension }}-$EXTENSION_VERSION.jar \
            -Dsources=./target/${{ inputs.extension }}-$EXTENSION_VERSION-sources.jar \
            -Djavadoc=./target/${{ inputs.extension }}-$EXTENSION_VERSION-javadoc.jar \
            -DrepositoryId=github \
            -Durl=https://maven.pkg.github.com/liquibase/${{ inputs.extension }} \
            -DgroupId=${{ inputs.groupId }} \
            -DartifactId=${{ inputs.extension }} \
            -Dversion=$EXTENSION_VERSION \
            -DgeneratePom=false \
            -DpomFile=pom.xml
          cd ..
