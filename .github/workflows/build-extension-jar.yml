name: Build & Deploy extension jar to GPM
# This action will download an extension from github repo, build it, and deploy it to GPM as version master-SNAPSHOT.

on:
  workflow_call:
    inputs:
      extension:
        description: "Extension to build"
        required: true
        default: ""
        type: string
      groupId:
        description: "Maven Group ID"
        default: "org.liquibase.ext"
        type: string
  workflow_dispatch:
    inputs:
      extension:
        description: "Extension to build"
        required: true
        default: ""
        type: string

# Add permissions for the default GITHUB_TOKEN
permissions:
  contents: write
  packages: write
  id-token: write # Required for OIDC authentication

jobs:
  delete-dependency-packages:
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:
      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - name: Get GitHub App token
        id: get-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ env.LIQUIBASE_GITHUB_APP_ID }}
          private-key: ${{ env.LIQUIBASE_GITHUB_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          permission-contents: write
          permission-actions: write
          permission-packages: write

      - uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ inputs.groupId }}.${{ inputs.extension }}
          package-type: "maven"
          min-versions-to-keep: 5 # Keep the last 5 versions so we don't break simultaneous builds
          delete-only-pre-release-versions: true
          token: ${{ steps.get-token.outputs.token }}

  build-and-deploy-extensions:
    needs: [delete-dependency-packages]
    runs-on: ubuntu-22.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GIT_USERNAME: "liquibot"
      GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true
      - name: Checkout Dependencies
        run: |
          git config --global credential.helper store
          echo "https://$GIT_USERNAME:$GIT_PASSWORD@github.com" > ~/.git-credentials
          git clone https://github.com/liquibase/${{ inputs.extension }}.git ${{ inputs.extension }}

      - name: Convert escaped newlines and set GPG key
        run: |
          GPG_KEY_CONTENT="$(printf '%b' "${{ env.GPG_SECRET }}")"
          {
            echo "GPG_KEY_CONTENT<<GPG_EOF"
            echo "$GPG_KEY_CONTENT"
            echo
            echo "GPG_EOF"
          } >> $GITHUB_ENV
          GPG_KEY_CONTENT="${GPG_KEY_CONTENT//%/%25}"
          GPG_KEY_CONTENT="${GPG_KEY_CONTENT//'\r'/%0D}"
          GPG_KEY_CONTENT="${GPG_KEY_CONTENT//'\n'/%0A}"
          echo "::add-mask::${GPG_KEY_CONTENT}"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"
          cache: "maven"
          gpg-private-key: ${{ env.GPG_KEY_CONTENT }}
          gpg-passphrase: ${{ env.GPG_PASSPHRASE }}
        env:
          GPG_PASSWORD: ${{ env.GPG_PASSPHRASE }}

      - name: Get GitHub App token
        id: get-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ env.LIQUIBASE_GITHUB_APP_ID }}
          private-key: ${{ env.LIQUIBASE_GITHUB_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: ${{ inputs.extension }}
          permission-packages: write

        #look for dependencies in maven
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "extension-repo",
                "url": "https://maven.pkg.github.com/liquibase/${{ inputs.extension }}",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              },
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              },
              {
                "id": "extension-repo",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              }
            ]

      - name: Build and deploy Extension to GPM
        env:
          GPG_PASSWORD: ${{ env.GPG_PASSPHRASE }}
          APP_TOKEN: ${{ steps.get-token.outputs.token }}
          ACTIONS_RUNNER_DEBUG: true
          ACTIONS_STEP_DEBUG: true
          GITHUB_TOKEN: ${{ steps.get-token.outputs.token }}
        run: |
          cd ${{ inputs.extension }}
          EXTENSION_VERSION="master-SNAPSHOT"
          mvn versions:set -DnewVersion=$EXTENSION_VERSION
          mvn clean install -DskipTests
          # Debug token info (masked in logs)
          echo "Token length: ${#APP_TOKEN}"
          echo "First 4 chars: ${APP_TOKEN:0:4}..."

          # Configure git for username/token in case it's needed
          git config --global credential.helper store
          echo "https://liquibot:${APP_TOKEN}@github.com" > ~/.git-credentials

          # Deploy with explicit token authentication
          mvn deploy:deploy-file \
              -Dfile=./target/${{ inputs.extension }}-$EXTENSION_VERSION.jar \
              -Dsources=./target/${{ inputs.extension }}-$EXTENSION_VERSION-sources.jar \
              -Djavadoc=./target/${{ inputs.extension }}-$EXTENSION_VERSION-javadoc.jar \
              -DrepositoryId=extension-repo \
              -Durl=https://maven.pkg.github.com/liquibase/${{ inputs.extension }} \
              -DpomFile=pom.xml \
              -Dgithub.token=${{ steps.get-token.outputs.token }} \
              -Dserver.username=liquibot \
              -Dserver.password=${{ steps.get-token.outputs.token }}
          cd ..
