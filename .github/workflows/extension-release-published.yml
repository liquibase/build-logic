name: Release Extension to Sonatype

on:
  workflow_call:
    inputs:
      extraCommand:
        description: "Specify it if you want to run an extra command before attaching the artifact"
        required: false
        default: ""
        type: string
      nameSpace:
        description: "xsd namespace"
        required: false
        default: ""
        type: string
      artifactPath:
        description: "Specify the path to the artifacts that should be attached to the build. Useful for multi-module extensions."
        required: false
        default: "."
        type: string
      deployToMavenCentral:
        description: "Specify it if you want to deploy to maven"
        required: false
        default: true
        type: boolean
      dry_run:
        description: "Specify it if you want to run a dry run"
        required: false
        default: false
        type: boolean
      dry_run_version:
        description: "The version of the dry-run release"
        required: false
        type: string
      dry_run_release_id:
        description: "The release id of the dry-run release"
        required: false
        type: string
    secrets:
      SONATYPE_USERNAME:
        description: "SONATYPE_USERNAME from the caller workflow"
        required: true
      SONATYPE_TOKEN:
        description: "SONATYPE_TOKEN from the caller workflow"
        required: true

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  maven-release:
    uses: liquibase/build-logic/.github/workflows/extension-release-prepare.yml@main
    if: inputs.deployToMavenCentral == true
    secrets: inherit
    with:
      extraCommand: ${{ inputs.extraCommand }}
      artifactPath: ${{ inputs.artifactPath }}

  release:
    if: inputs.deployToMavenCentral == true
    runs-on: ubuntu-latest
    needs: maven-release
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java for publishing to Maven Central Repository
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      # look for dependencies in maven
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT_GPM_ACCESS }}"
              },
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT_GPM_ACCESS }}"
              },
              {
                "id": "central",
                "username": "${{ secrets.SONATYPE_USERNAME }}",
                "password": "${{ secrets.SONATYPE_TOKEN }}"
              }
            ]

      - name: Configure Git
        run: |
          git config user.name "liquibot"
          git config user.email "liquibot@liquibase.org"

      - name: Run extra command
        working-directory: ${{ inputs.artifactPath }}
        if: inputs.extraCommand != ''
        run: |
          ${{ inputs.extraCommand }}

      - name: Build release artifacts
        working-directory: ${{ inputs.artifactPath }}
        id: build-release-artifacts
        continue-on-error: true
        run: |
          mvn -B release:clean release:prepare -Darguments="-Dmaven.javadoc.skip=true -Dmaven.test.skipTests=true -Dmaven.test.skip=true -Dmaven.deploy.skip=true" -DcheckModificationExcludeList=** -DignoreSnapshots=true -DreleaseVersion=${{ github.event.inputs.liquibaseVersion }} -DpushChanges=false
          git reset HEAD~ --hard

      - name: Get Artifact ID
        working-directory: ${{ inputs.artifactPath }}
        id: get-artifact-id
        run: echo "artifact_id=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV

      - name: Download Release Artifacts
        uses: robinraju/release-downloader@v1.12
        with:
          tag: "${{ github.event.release.tag_name }}"
          fileName: "${{ env.artifact_id }}-*"
          out-file-path: ${{ inputs.artifactPath }}

      - name: Publish to Maven Central
        working-directory: ${{ inputs.artifactPath }}
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_TOKEN }}
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          
          # Use central-publishing-maven-plugin to publish directly to Central Portal
          mvn -B org.sonatype.central:central-publishing-maven-plugin:0.7.0:publish \
              -Dcentral.autoPublish=false \
              -Dcentral.checksums=all \
              -Dfile=${{ env.artifact_id }}-${version}.jar \
              -DpomFile=${{ env.artifact_id }}-${version}.pom \
              -Dsources=${{ env.artifact_id }}-${version}-sources.jar \
              -Djavadoc=${{ env.artifact_id }}-${version}-javadoc.jar

  dry-run-release:
    if: ${{ inputs.dry_run == true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java for publishing to Maven Central Repository
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      # look for dependencies in maven
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "dry-run-sonatype-nexus-staging",
                "url": "https://repo.liquibase.net/repository/dry-run-sonatype-nexus-staging/",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "false"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT_GPM_ACCESS }}"
              },
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT_GPM_ACCESS }}"
              },
              {
                "id": "dry-run-sonatype-nexus-staging",
                "username": "${{ secrets.REPO_LIQUIBASE_NET_USER }}",
                "password": "${{ secrets.REPO_LIQUIBASE_NET_PASSWORD }}"
              }
            ]

      - name: Configure Git
        run: |
          git config user.name "liquibot"
          git config user.email "liquibot@liquibase.org"

      - name: Get Artifact ID
        working-directory: ${{ inputs.artifactPath }}
        id: get-artifact-id
        run: echo "artifact_id=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV

      - name: Download Release Artifacts
        uses: robinraju/release-downloader@v1.12
        with:
          releaseId: "${{ inputs.dry_run_release_id }}"
          fileName: "${{ env.artifact_id }}-*"
          out-file-path: ${{ inputs.artifactPath }}

      - name: Publish to Maven Central
        working-directory: ${{ inputs.artifactPath }}
        env:
          MAVEN_USERNAME: ${{ secrets.REPO_LIQUIBASE_NET_USER }}
          MAVEN_PASSWORD: ${{ secrets.REPO_LIQUIBASE_NET_PASSWORD }}
        run: |
          version=${{ inputs.dry_run_version }}         
          mvn -B org.apache.maven.plugins:maven-deploy-plugin:3.0.0-M1:deploy-file \
                      -Durl=https://repo.liquibase.net/repository/dry-run-sonatype-nexus-staging/ \
                      -DrepositoryId=dry-run-sonatype-nexus-staging \
                      -DpomFile=${{ env.artifact_id }}-${version}.pom \
                      -DgeneratePom=false \
                      -Dfile=${{ env.artifact_id }}-${version}.jar \
                      -Dsources=${{ env.artifact_id }}-${version}-sources.jar \
                      -Djavadoc=${{ env.artifact_id }}-${version}-javadoc.jar \
                      -Dfiles=${{ env.artifact_id }}-${version}.jar.asc,${{ env.artifact_id }}-${version}-sources.jar.asc,${{ env.artifact_id }}-${version}-javadoc.jar.asc,${{ env.artifact_id }}-${version}.pom.asc \
                      -Dtypes=jar.asc,jar.asc,jar.asc,pom.asc \
                      -Dclassifiers=,sources,javadoc,

  deploy_xsd:
    if: inputs.nameSpace != '' && inputs.deployToMavenCentral == true && inputs.dry_run == false
    name: Upload xsds
    runs-on: ubuntu-22.04
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download xsd files
        uses: actions/checkout@v4
        with:
          # Relative path under $GITHUB_WORKSPACE to place the repository
          path: ${{ github.event.repository.name }}
          repository: "liquibase/${{ github.event.repository.name }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_PROD_GITHUB_OIDC_ROLE_ARN_BUILD_LOGIC }}
          aws-region: us-east-1

      - name: Upload to s3
        # aws s3 sync syncs directories and S3 prefixes.
        run: |
          aws s3 sync ${{ github.event.repository.name }}/src/main/resources/www.liquibase.org/xml/ns/${{ inputs.nameSpace }}/ s3://liquibaseorg-origin/xml/ns/${{ inputs.nameSpace }}/ --content-type application/octet-stream --only-show-errors

      - name: Index.htm file upload
        # List all xsd and htm files in repository. Copy index.htm to temporary folder
        # Add links for all xsd files to index.htm file (except liquibase-${{ inputs.nameSpace }}-latest.xsd and index.htm)
        # Sync index.htm with the s3
        run: |
          search_dir=${{ github.event.repository.name }}/src/main/resources/www.liquibase.org/xml/ns/${{ inputs.nameSpace }}
          filenames=`ls -1 $search_dir`
          mkdir index-file
          cp $search_dir/index.htm index-file/
          for entry in $filenames
          do
            if [[ "$entry" != "${{ github.event.repository.name }}-latest.xsd" ]] && [[ "$entry" != "index.htm" ]] ;then
              sed -ie "s/<\/ul>/  <li><a href=\"\/xml\/ns\/${{ inputs.nameSpace }}\/${entry}\">${entry}<\/a><\/li>\n<\/ul>/" index-file/index.htm
            fi
          done

          aws s3 sync index-file s3://liquibaseorg-origin/xml/ns/${{ inputs.nameSpace }}/ --only-show-errors
