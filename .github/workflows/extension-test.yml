name: Build and Test Extension

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        description: 'SONAR_TOKEN from the caller workflow'
        required: true
      PRO_LICENSE_KEY:
        description: 'PRO_LICENSE_KEY from the caller workflow'
        required: true
      GHA_AWS_KEY_ID:
        description: 'GHA_AWS_KEY_ID from the caller workflow'
        required: true
      GHA_AWS_KEY:
        description: 'GHA_AWS_KEY from the caller workflow'
        required: true

env:
  AWS_REGION: us-east-1
  LIQUIBASE_PRO_LICENSE_KEY: ${{ secrets.PRO_LICENSE_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.GHA_AWS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.GHA_AWS_KEY }}

jobs:
  build:
    name: Build & Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and Package
        run: mvn -B dependency:go-offline clean package -DskipTests=true

      - name: Get Artifact ID
        id: get-artifact-id
        run: echo "artifact_id=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV

      - name: Save Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_id }}-artifacts
          path: |
            target/${{ env.artifact_id }}*

      - name: Save Event File
        uses: actions/upload-artifact@v3
        with:
          name: Event File
          path: ${{ github.event_path }}

      - name: Build Cache
        uses: actions/cache@v3.0.5
        with:
          key: build-${{ github.run_number }}-${{ github.run_attempt }}
          path: |
            ${{ github.workspace }}/target/**
            ~/.m2/repository/org/liquibase/

  unit-test:
    strategy:
      fail-fast: false
      matrix:
        java: [ 8, 11, 17, 18 ]
        os: [ ubuntu-latest, windows-latest ]
    name: Test Java ${{ matrix.java }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build
    env:
      OS_TYPE: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Build Cache
        uses: actions/cache@v3.0.5
        with:
          key: build-${{ github.run_number }}-${{ github.run_attempt }}
          path: |
            ${{ github.workspace }}/target/**
            ~/.m2/repository/org/liquibase/

      - name: Run Tests
        run: mvn -B jacoco:prepare-agent surefire:test

      - name: Archive Test Results - ${{ matrix.os }}
        if: env.OS_TYPE != 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-jdk-${{ matrix.java }}-${{ matrix.os }}
          path: |
            **/target/surefire-reports
            **/target/jacoco.exec

      - name: Archive Test Results - ${{ matrix.os }}
        if: env.OS_TYPE == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-jdk-${{ matrix.java }}-${{ matrix.os }}
          path: |
            **/target/surefire-reports
            **/target/jacoco.exec

  sonar:
    name: Sonar Scan
    runs-on: ubuntu-latest
    needs: [ unit-test ]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build code
        run: mvn -B compile

      - name: Aggregate Jacoco Results
        run: |
          mvn -B -Djacoco.fileset.directory=artifacts \
            -Djacoco.destFile=target\jacoco-merged.exec \
            -Djacoco.dataFile=target\jacoco-merged.exec \
            jacoco:merge \
            jacoco:report

      - name: Sonar Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B -Dsonar.login=$SONAR_TOKEN \
              -Dsonar.projectId=${{ github.event.repository.name }} \
              -Dsonar.pullrequest.key=${{ github.event.pull_request.id }} \
              -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }} \
              -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }} \
              -Dsonar.scm.revision=${{ github.event.pull_request.head.sha }} \
              sonar:sonar
