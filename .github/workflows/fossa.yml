name: FOSSA License Compliance and Security Check

on:
  workflow_call:
    inputs:
      check_snippets:
        description: "Run FOSSA Snippets Detection"
        required: false
        default: true
        type: boolean
      check_ai_generated_code:
        description: "Run FOSSA AI Generated Code Detection"
        required: false
        default: true
        type: boolean
      generate_sbom:
        description: "Generate FOSSA SBOM Report"
        required: false
        default: true
        type: boolean
jobs:
  fossa-scan:
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Get Fossa Configuration
      if: ${{ inputs.check_ai_generated_code }}
      run: |
        curl -o $PWD/.github/.fossa.yml https://raw.githubusercontent.com/liquibase/build-logic/DAT-17080/.github/.fossa.yml

    - name: Install FOSSA CLI
      run: |
        curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash

    - name: Run FOSSA Snippets Detection
      if: ${{ inputs.check_snippets }}
      id: snippets
      run: |
        # https://github.com/fossas/fossa-cli/blob/master/docs/references/subcommands/snippets/analyze.md
        fossa snippets analyze -o snippets 2>&1 | tee snippets.out

    - name: Generate Snippet Dependencies
      if: ${{ inputs.check_snippets }}
      run: |
        # https://github.com/fossas/fossa-cli/blob/master/docs/references/subcommands/snippets/commit.md
        fossa snippets commit --analyze-output snippets --overwrite-fossa-deps --format yml

    - name: Run FOSSA Analyze with AI Generated Code Detection
      if: ${{ inputs.check_ai_generated_code }}
      run: |
        # https://github.com/fossas/fossa-cli/tree/master/docs/references/subcommands/analyze
        fossa analyze -c $PWD/.github/.fossa.yml -b ${{ github.ref_name }}

    - name: Run FOSSA Analyze
      if: ${{ !inputs.check_ai_generated_code }}
      run: |
        # https://github.com/fossas/fossa-cli/tree/master/docs/references/subcommands/analyze
        fossa analyze -b ${{ github.ref_name }}

    - name: Run FOSSA Test
      id: test
      continue-on-error: true 
      run: |
        # https://github.com/fossas/fossa-cli/tree/master/docs/references/subcommands/test
        fossa test 2>&1 | tee test.out

    - name: FOSSA Snippets Detection Decoration
      if: github.event_name == 'pull_request' && ${{ inputs.check_snippets }}
      uses: actions/github-script@v6
      continue-on-error: true        
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const run_url = process.env.GITHUB_SERVER_URL + '/' + process.env.GITHUB_REPOSITORY + '/actions/runs/' + process.env.GITHUB_RUN_ID
          const run_link = '<a href="' + run_url + '">Actions</a>.'
          const fs = require('fs')
          const snippets_file = fs.readFileSync('snippets.out', 'utf8')
          const snippets = snippets_file.length > 65000 ? snippets_file.toString().substring(0, 65000) + " ..." : snippets_file
          const truncated_message = snippets_file.length > 65000 ? "Output is too long and was truncated. You can read full log in " + run_link + "<br /><br />" : ""
          const output = `#### FOSSA Snippets Detection ðŸ¤–\`${{ steps.snippets.outcome }}\`
          <details><summary>Snippets Detection Output</summary>

          \`\`\`\n
          ${{ snippets }}
          \`\`\`

          </details>
          ${truncated_message}

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ github.workspace }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: FOSSA Test Decoration
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      continue-on-error: true        
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const run_url = process.env.GITHUB_SERVER_URL + '/' + process.env.GITHUB_REPOSITORY + '/actions/runs/' + process.env.GITHUB_RUN_ID
          const run_link = '<a href="' + run_url + '">Actions</a>.'
          const fs = require('fs')
          const test_file = fs.readFileSync('test.out', 'utf8')
          const test = test_file.length > 65000 ? test_file.toString().substring(0, 65000) + " ..." : test_file
          const truncated_message = test_file.length > 65000 ? "Output is too long and was truncated. You can read full log in " + run_link + "<br /><br />" : ""
          const output = `#### FOSSA Test ðŸ§ª\`${{ steps.test.outcome }}\`
          <details><summary>Test Output</summary>

          \`\`\`\n
          ${{ test }}
          \`\`\`

          </details>
          ${truncated_message}

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ github.workspace }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Run FOSSA SBOM Report
      if: ${{ inputs.generate_sbom }}
      run: |
        # https://github.com/fossas/fossa-cli/blob/master/docs/references/subcommands/report.md
        # fossa report attribution --format spdx
