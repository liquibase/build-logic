name: Build and Test Extension

on:
  workflow_call:
    inputs:
      java:
        description: "Java version to test"
        required: false
        default: "[11, 17, 21]"
        type: string
      javaBuildVersion:
        description: "Java version to build the project"
        required: false
        default: "17"
        type: string
      os:
        description: "Operating system to test"
        required: false
        default: '["ubuntu-latest", "windows-latest"]'
        type: string
      nightly:
        description: "Specifies nightly builds against liquibase master-SNAPSHOT"
        required: false
        default: false
        type: boolean
      extraCommand:
        description: "Specify it if you want to run an extra command before attaching the artifact"
        required: false
        default: ""
        type: string
      extraMavenArgs:
        description: "Specify it if you want to run an extra maven argument"
        required: false
        default: ""
        type: string
      skipSonar:
        description: "Skip SonarQube analysis"
        required: false
        default: false
        type: boolean

env:
  MAVEN_VERSION: "3.9.5"

permissions:
  contents: read
  pull-requests: write
  packages: read
  id-token: write

jobs:
  build:
    name: Build & Package
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Set up JDK ${{ inputs.javaBuildVersion }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.javaBuildVersion }}
          distribution: "temurin"
          cache: "maven"

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: ${{ env.MAVEN_VERSION }}

      # look for dependencies in maven
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              },
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              }
            ]

      - name: Run extra command
        if: inputs.extraCommand != ''
        run: |
          ${{ inputs.extraCommand }}

      - name: Build and Package latest liquibase version
        if: ${{ inputs.nightly }}
        run: mvn -B dependency:go-offline clean package -DskipTests=true "-Dliquibase.version=master-SNAPSHOT"

      - name: Notify Slack on Build Failure
        if: ${{ failure() && inputs.nightly }}

        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "View details on GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} <@U042HRTL4DT>"
          SLACK_TITLE: "❌ ${{ github.repository }} ❌ Build failed on branch ${{ github.ref }} for commit ${{ github.sha }} in repository ${{github.repository}}"
          SLACK_USERNAME: liquibot
          SLACK_WEBHOOK: ${{ env.NIGHTLY_BUILDS_SLACK_WEBHOOK }}
          SLACK_ICON_EMOJI: ":robot_face:"
          SLACK_FOOTER: "${{ github.repository }}"
          SLACK_LINK_NAMES: true

      - name: Build and Package
        if: ${{ !inputs.nightly }}
        run: mvn -B dependency:go-offline clean package -DskipTests=true

      - name: Get Project Artifact Name
        id: get-artifact-name
        shell: bash
        run: |
          PROJECT_ARTIFACT_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          echo "PROJECT_ARTIFACT_NAME=${PROJECT_ARTIFACT_NAME}" >> $GITHUB_ENV

      - name: Save Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_ARTIFACT_NAME }}-artifacts
          path: |
            target/*

      - name: Save Event File
        uses: actions/upload-artifact@v4
        with:
          name: Event File
          path: ${{ github.event_path }}

  unit-test:
    strategy:
      fail-fast: false
      matrix:
        java: ${{fromJson(inputs.java || '[11, 17, 21]')}}
        os: ${{fromJson(inputs.os || '["ubuntu-latest", "windows-latest"]')}}
    name: Test Java ${{ matrix.java }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Get Project Artifact Name
        id: get-artifact-name
        shell: bash
        run: |
          PROJECT_ARTIFACT_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          echo "PROJECT_ARTIFACT_NAME=${PROJECT_ARTIFACT_NAME}" >> $GITHUB_ENV

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: "temurin"
          cache: "maven"

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: ${{ env.MAVEN_VERSION }}

      # look for dependencies in maven
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              },
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              }
            ]

      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.PROJECT_ARTIFACT_NAME }}-artifacts
          path: ./target

      - name: Run extra command
        if: inputs.extraCommand != ''
        run: |
          ${{ inputs.extraCommand }}

      - name: Run Tests
        if: ${{ !inputs.nightly }}
        run: mvn -B test -P 'coverage' ${{ inputs.extraMavenArgs }}

      - name: Run Tests
        if: ${{ inputs.nightly }}
        run: mvn -B test -P 'coverage' ${{ inputs.extraMavenArgs }} "-Dliquibase.version=master-SNAPSHOT"

      - name: Notify Slack on Build Failure
        if: ${{ failure() && inputs.nightly }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "View details on GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} <@U042HRTL4DT>"
          SLACK_TITLE: "❌ ${{ github.repository }} ❌ Tests failed on branch ${{ github.ref }} for commit ${{ github.sha }} in repository ${{github.repository}}"
          SLACK_USERNAME: liquibot
          SLACK_WEBHOOK: ${{ env.NIGHTLY_BUILDS_SLACK_WEBHOOK }}
          SLACK_ICON_EMOJI: ":robot_face:"
          SLACK_FOOTER: "${{ github.repository }}"
          SLACK_LINK_NAMES: true

      - name: Archive Test Results - ${{ matrix.os }}
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-jdk-${{ matrix.java }}-${{ matrix.os }}
          path: |
            **/target/surefire-reports
            **/target/site/jacoco/jacoco.xml

  sonar-pr:
    if: ${{ !inputs.skipSonar && !inputs.nightly }}
    needs: [unit-test]
    uses: liquibase/build-logic/.github/workflows/sonar-pull-request.yml@main
    secrets: inherit
    with:
      extraCommand: ${{ inputs.extraCommand }}
