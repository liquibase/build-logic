name: DEB packaging
on:
  workflow_call:
    inputs:
      groupId:
        description: 'Value from the groupId field in pom.xml. i.e. org.liquibase'
        required: true
        type: string
      artifactId:
        description: 'Value from the artifactId field in pom.xml. i.e. liquibase'
        required: true
        type: string
      version:
        description: 'Value from the version field in pom.xml. i.e 4.23.0'
        type: string
    secrets:
      AWS_PROD_ACCESS_KEY_ID:
        description: 'AWS_PROD_ACCESS_KEY_ID from the caller workflow'
        required: true
      AWS_PROD_SECRET_ACCESS_KEY:
        description: 'AWS_PROD_SECRET_ACCESS_KEY from the caller workflow'
        required: true
      GPG_SECRET:
        description: 'GPG_SECRET from the caller workflow'
        required: true
      GPG_PASSPHRASE:
        description: 'GPG_PASSPHRASE from the caller workflow'
        required: true
      GPG_SECRET_KEY_ID:
        description: 'GPG_SECRET_KEY_ID from the caller workflow'
        required: true


env:
  MAVEN_VERSION: '3.9.2'

jobs:

  upload_deb:
      name: Upload ${{ inputs.artifactId }} deb package
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@v3

        - name: Set up Java
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: 'maven'

        - name: Get Reusable Maven Files
          run: |
            mkdir -p $PWD/.github/src/${{ inputs.artifactId }}/deb/control
            mkdir -p $PWD/.github/src/${{ inputs.artifactId }}/main/archive
            curl -o $PWD/.github/src/${{ inputs.artifactId }}/deb/control/control https://raw.githubusercontent.com/liquibase/build-logic/v0.3.7/src/${{ inputs.artifactId }}/deb/control/control
            curl -o $PWD/.github/src/${{ inputs.artifactId }}/deb/control/postinst https://raw.githubusercontent.com/liquibase/build-logic/v0.3.7/src/${{ inputs.artifactId }}/deb/control/postinst
            curl -o $PWD/.github/src/${{ inputs.artifactId }}/main/archive/${{ inputs.artifactId }}-env.sh https://raw.githubusercontent.com/liquibase/build-logic/v0.3.7/src/${{ inputs.artifactId }}/main/archive/${{ inputs.artifactId }}-env.sh
            curl -o $PWD/.github/package-deb-pom.xml https://raw.githubusercontent.com/liquibase/build-logic/v0.3.7/.github/package-deb-pom.xml

        - name: Set up Maven
          uses: stCarolas/setup-maven@v4.5
          with:
            maven-version: ${{ env.MAVEN_VERSION }}

        - name: Set up Ruby
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: 3.1.4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_PROD_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_PROD_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

        - name: Download ${{ inputs.artifactId }} Release
          run: |
            mkdir -p $PWD/.github/target
            wget -q -O $PWD/.github/target/${{ inputs.artifactId }}-${{ inputs.version }}.tar.gz https://github.com/liquibase/${{ inputs.artifactId }}/releases/download/v${{ inputs.version }}/${{ inputs.artifactId }}-${{ inputs.version }}.tar.gz

        - name: Build ${{ inputs.artifactId }} deb package
          run: |
            mvn package -f $PWD/.github/package-deb-pom.xml -DgroupId=${{ inputs.groupId }} -DartifactId=${{ inputs.artifactId }} -Drevision=${{ inputs.version }} -DskipTests

        - name: Install deb-s3 gem
          run: gem install deb-s3

        - name: Upload ${{ inputs.artifactId }} deb package
          run: |
            sudo apt install pinentry-tty
            echo "2" | sudo update-alternatives --config pinentry
            echo "${{ secrets.GPG_SECRET }}" | gpg --batch --import --pinentry-mode loopback --passphrase "${{ secrets.GPG_PASSPHRASE }}"
            export GPG_TTY=$(tty)
            echo '${{ secrets.GPG_PASSPHRASE }}' > pass.txt
            deb-s3 upload --preserve-versions --sign "${{ secrets.GPG_SECRET_KEY_ID }}" --gpg-options "\-\-pinentry-mode loopback \-\-batch \-\-passphrase\-file pass.txt \-\-yes \-\-quiet" --bucket repo.liquibase.com $PWD/.github/target/${{ inputs.artifactId }}-${{ inputs.version }}.deb 
                  
        
          
