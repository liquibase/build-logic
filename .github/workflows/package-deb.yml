name: deb packaging
on:
  repository_dispatch:
    types: [liquibase-release]
  workflow_dispatch:
    inputs:
      groupId:
        description: 'Value from the groupId field in pom.xml. i.e. org.liquibase'
        required: true
        default: 'org.liquibase'
      artifactId:
        description: 'Value from the artifactId field in pom.xml. i.e. liquibase'
        required: true
        default: 'liquibase'
      version:
        description: 'Value from the version field in pom.xml. i.e 4.23.0'
        required: true

env:
  MAVEN_VERSION: '3.9.2'

jobs:

  upload_deb:
      name: Upload ${{ inputs.artifactId }} deb package
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@v3

        - name: Set up Java
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: 'maven'
          
        - name: Set up Maven
          uses: stCarolas/setup-maven@v4.5
          with:
            maven-version: ${{ env.MAVEN_VERSION }}

      # look for dependencies in maven
        - name: maven-settings-xml-action
          uses: whelk-io/maven-settings-xml-action@v20
          with:
            repositories: |
              [
                {
                  "id": "liquibase",
                  "url": "https://maven.pkg.github.com/liquibase/liquibase",
                  "releases": {
                    "enabled": "false"
                  },
                  "snapshots": {
                    "enabled": "true",
                    "updatePolicy": "always"
                  }
                }
              ]
            servers: |
              [
                {
                  "id": "liquibase",
                  "username": "liquibot",
                  "password": "${{ secrets.LIQUIBOT_PAT }}"
                }
              ]

        - name: Set up Ruby
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: 3.1.4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_PROD_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_PROD_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

        - name: Download ${{ inputs.artifactId }} Release
          run: |
            mkdir -p target
            wget -q -O target/${{ inputs.artifactId }}-${{ inputs.version }}.tar.gz https://github.com/liquibase/${{ inputs.artifactId }}/releases/download/v${{ inputs.version }}/${{ inputs.artifactId }}-${{ inputs.version }}.tar.gz

        - name: Build ${{ inputs.artifactId }} deb package
          run: |
            mvn package -DgroupId=${{ inputs.groupId }} -DartifactId=${{ inputs.artifactId }} -Drevision=${{ inputs.version }} -DskipTests -f ./.github/deb-pom.xml

        - name: Install deb-s3 gem
          run: gem install deb-s3

        - name: Upload ${{ inputs.artifactId }} deb package
          run: |
            sudo apt install pinentry-tty
            echo "2" | sudo update-alternatives --config pinentry
            echo "${{ secrets.GPG_SECRET }}" | gpg --batch --import --pinentry-mode loopback --passphrase "${{ secrets.GPG_PASSPHRASE }}"
            export GPG_TTY=$(tty)
            echo '${{ secrets.GPG_PASSPHRASE }}' > pass.txt
            deb-s3 upload --preserve-versions --sign "${{ secrets.GPG_SECRET_KEY_ID }}" --gpg-options "\-\-pinentry-mode loopback \-\-batch \-\-passphrase\-file pass.txt \-\-yes \-\-quiet" --bucket repo.liquibase.com target/${{ inputs.artifactId }}-${{ inputs.version }}.deb 
          
