name: Release POM to Sonatype

on:
  workflow_call:

permissions:
  contents: write
  pull-requests: write
  id-token: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - name: Set up Java for publishing to Maven Central Repository
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"
          server-id: sonatype-nexus-staging
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Configure Git
        run: |
          git config user.name "liquibot"
          git config user.email "liquibot@liquibase.org"

      - name: Build release artifacts
        id: build-release-artifacts
        run: |
          mvn -B release:clean release:prepare -Darguments="-DscmServerId=liquibase -Dmaven.javadoc.skip=true -Dmaven.test.skipTests=true -Dmaven.test.skip=true -Dmaven.deploy.skip=true" -DreleaseVersion=${{ github.event.inputs.liquibaseVersion }} -DpushChanges=false
          git reset HEAD~ --hard

      - name: Get Artifact ID
        id: get-artifact-id
        run: echo "artifact_id=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV

      - name: Download Release Artifacts
        uses: robinraju/release-downloader@v1.12
        with:
          tag: "${{ github.event.release.tag_name }}"
          filename: "${{ env.artifact_id }}-*"
          out-file-path: "."

      - name: Publish to Maven Central
        env:
          MAVEN_USERNAME: ${{ env.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ env.SONATYPE_TOKEN }}
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          groupId=$(mvn help:evaluate -Dexpression=project.groupId -q -DforceStdout)

          # Create Maven repository layout structure for the bundle
          # Convert groupId dots to directory separators
          groupPath=$(echo "$groupId" | tr '.' '/')
          mkdir -p "bundle/${groupPath}/${{ env.artifact_id }}/${version}"

          # Copy all artifacts and their signatures/checksums to proper Maven repository layout
          for file in ${{ env.artifact_id }}-${version}*; do
            cp "$file" "bundle/${groupPath}/${{ env.artifact_id }}/${version}/"
          done

          # Create the bundle zip file
          cd bundle
          zip -r ../central-bundle.zip .
          cd ..

          # Create base64 encoded credentials for Bearer auth
          AUTH_HEADER=$(printf "%s:%s" "${MAVEN_USERNAME}" "${MAVEN_PASSWORD}" | base64 -w 0)

          # Upload bundle to Central Portal using curl with proper authentication
          echo "Uploading bundle to Central Portal..."
          UPLOAD_RESPONSE=$(curl -s -w "\n%{http_code}" \
            -X POST \
            -H "Authorization: Bearer ${AUTH_HEADER}" \
            -F "bundle=@central-bundle.zip" \
            "https://central.sonatype.com/api/v1/publisher/upload?publishingType=USER_MANAGED&name=${{ env.artifact_id }}-${version}")

          # Parse response
          HTTP_CODE=$(echo "$UPLOAD_RESPONSE" | tail -n1)
          DEPLOYMENT_ID=$(echo "$UPLOAD_RESPONSE" | head -n1)

          echo "HTTP Status: $HTTP_CODE"
          echo "Deployment ID: $DEPLOYMENT_ID"

          if [ "$HTTP_CODE" != "201" ]; then
            echo "Upload failed with HTTP status $HTTP_CODE"
            echo "Response: $DEPLOYMENT_ID"
            exit 1
          fi

          echo "Bundle uploaded successfully to Central Portal"
          echo "Deployment ID: $DEPLOYMENT_ID"
          echo "Visit https://central.sonatype.com/publishing/deployments to view and publish your deployment"

  maven-release:
    needs: release
    uses: liquibase/build-logic/.github/workflows/extension-release-prepare.yml@main
    secrets: inherit
