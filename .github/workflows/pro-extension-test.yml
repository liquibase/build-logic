name: Build and Test Pro Extension

on:
  workflow_call:
    inputs:
      java:
        description: "Java version to test"
        required: false
        default: "[11, 17, 21]"
        type: string
      os:
        description: "Operating system to test"
        required: false
        default: '["ubuntu-latest", "windows-latest"]'
        type: string
      nightly:
        description: "Specifies nightly builds against liquibase master-SNAPSHOT"
        required: false
        default: false
        type: boolean
      extraCommand:
        description: "Specify it if you want to run an extra command before attaching the artifact. This runs on both Linux and Windows runners."
        required: false
        default: ""
        type: string
      extraLinuxCommand:
        description: "Specify it if you want to run an extra command before attaching the artifact on Linux."
        required: false
        default: ""
        type: string
      extraWindowsCommand:
        description: "Specify it if you want to run an extra command before attaching the artifact on Windows."
        required: false
        default: ""
        type: string
      extraMavenArgs:
        description: "Specify it if you want to run an extra maven argument"
        required: false
        default: ""
        type: string
    secrets:
      SONAR_TOKEN:
        description: "SONAR_TOKEN from the caller workflow"
        required: true
      PRO_LICENSE_KEY:
        description: "PRO_LICENSE_KEY from the caller workflow"
        required: true
      GHA_AWS_KEY_ID:
        description: "GHA_AWS_KEY_ID from the caller workflow"
        required: true
      GHA_AWS_KEY:
        description: "GHA_AWS_KEY from the caller workflow"
        required: true

env:
  AWS_REGION: us-east-1
  LIQUIBASE_PRO_LICENSE_KEY: ${{ secrets.PRO_LICENSE_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.GHA_AWS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.GHA_AWS_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  MAVEN_VERSION: "3.9.5"

jobs:
  build:
    name: Build & Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"
          cache: "maven"

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: ${{ env.MAVEN_VERSION }}

      # look for dependencies in maven
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              },
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              }
            ]

      - name: Run extra command
        if: inputs.extraCommand != ''
        run: |
          ${{ inputs.extraCommand }}

      - name: Run extra Linux command
        if: inputs.extraLinuxCommand != ''
        run: |
          ${{ inputs.extraLinuxCommand }}

      - name: Build and Package latest liquibase version
        if: ${{ inputs.nightly }}
        run: mvn -B dependency:go-offline clean package -DskipTests=true "-Dliquibase.version=master-SNAPSHOT"

      - name: Notify Slack on Build Failure
        if: ${{ failure() && inputs.nightly }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "View details on GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} <@U042HRTL4DT>"
          SLACK_TITLE: "❌ ${{ github.repository }} ❌ Build failed on branch ${{ github.ref }} for commit ${{ github.sha }} in repository ${{github.repository}}"
          SLACK_USERNAME: liquibot
          SLACK_WEBHOOK: ${{ secrets.NIGHTLY_BUILDS_SLACK_WEBHOOK }}
          SLACK_ICON_EMOJI: ":robot_face:"
          SLACK_FOOTER: "${{ github.repository }}"
          SLACK_LINK_NAMES: true

      - name: Build and Package
        if: ${{ !inputs.nightly }}
        run: mvn -B dependency:go-offline clean package -DskipTests=true

      - name: Get Artifact ID
        id: get-artifact-id
        run: echo "::set-output name=artifact_id::$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)"

      - name: Save Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.get-artifact-id.outputs.artifact_id }}-artifacts
          path: |
            target/*

      - name: Save Event File
        uses: actions/upload-artifact@v3
        with:
          name: Event File
          path: ${{ github.event_path }}

    outputs:
      artifact_id: ${{ steps.get-artifact-id.outputs.artifact_id }}

  unit-test:
    strategy:
      fail-fast: false
      matrix:
        java: ${{fromJson(inputs.java || '[8, 11, 17, 18]')}}
        os: ${{fromJson(inputs.os || '["ubuntu-latest", "windows-latest"]')}}
    name: Test Java ${{ matrix.java }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: "temurin"
          cache: "maven"

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: ${{ env.MAVEN_VERSION }}

      # look for dependencies in maven
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              },
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              }
            ]

      - uses: actions/download-artifact@v3
        with:
          name: ${{needs.build.outputs.artifact_id}}-artifacts
          path: ./target

      - name: Run extra command
        if: inputs.extraCommand != ''
        run: |
          ${{ inputs.extraCommand }}

      - name: Run extra Linux command
        if: inputs.extraLinuxCommand != '' && runner.os == 'Linux'
        run: |
          ${{ inputs.extraLinuxCommand }}

      - name: Run extra Windows command
        if: inputs.extraWindowsCommand != '' && runner.os == 'Windows'
        run: |
          ${{ inputs.extraWindowsCommand }}

      - name: Run Tests
        if: ${{ !inputs.nightly }}
        run: mvn -B test -P 'coverage' ${{ inputs.extraMavenArgs }}

      - name: Run Tests
        if: ${{ inputs.nightly }}
        run: mvn -B test -P 'coverage' ${{ inputs.extraMavenArgs }} "-Dliquibase.version=master-SNAPSHOT"

      - name: Notify Slack on Build Failure
        if: ${{ failure() && inputs.nightly }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "View details on GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} <@U042HRTL4DT>"
          SLACK_TITLE: "❌ ${{ github.repository }} ❌ Tests failed on branch ${{ github.ref }} for commit ${{ github.sha }} in repository ${{github.repository}}"
          SLACK_USERNAME: liquibot
          SLACK_WEBHOOK: ${{ secrets.NIGHTLY_BUILDS_SLACK_WEBHOOK }}
          SLACK_ICON_EMOJI: ":robot_face:"
          SLACK_FOOTER: "${{ github.repository }}"
          SLACK_LINK_NAMES: true

      - name: Archive Test Results - ${{ matrix.os }}
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-jdk-${{ matrix.java }}-${{ matrix.os }}
          path: |
            **/target/surefire-reports
            **/target/site/jacoco/jacoco.xml

  sonar-pr:
    if: ${{ !inputs.nightly }}
    needs: [unit-test]
    uses: liquibase/build-logic/.github/workflows/sonar-pull-request.yml@v0.6.7
    secrets: inherit
    with:
      extraCommand: ${{ inputs.extraCommand }}
