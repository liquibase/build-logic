name: Build and Test Pro Extension

on:
  workflow_call:
    inputs:
      java:
        description: 'Java version to test'
        required: false
        default: '[8, 11, 17, 18]'
        type: string
      os:
        description: 'Operating system to test'
        required: false
        default: '["ubuntu-latest", "windows-latest"]'
        type: string
      nightly:
        description: 'Specifies nightly builds against liquibase master-SNAPSHOT'
        required: false
        default: false
        type: boolean
    secrets:
      SONAR_TOKEN:
        description: 'SONAR_TOKEN from the caller workflow'
        required: true
      PRO_LICENSE_KEY:
        description: 'PRO_LICENSE_KEY from the caller workflow'
        required: true
      GHA_AWS_KEY_ID:
        description: 'GHA_AWS_KEY_ID from the caller workflow'
        required: true
      GHA_AWS_KEY:
        description: 'GHA_AWS_KEY from the caller workflow'
        required: true

env:
  AWS_REGION: us-east-1
  LIQUIBASE_PRO_LICENSE_KEY: ${{ secrets.PRO_LICENSE_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.GHA_AWS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.GHA_AWS_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build & Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      # look for dependencies in maven
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "false"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "false"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              },
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              }
            ]

      - name: Set latest liquibase version
        if: ${{ inputs.nightly }} 
        run: mvn versions:set-property -Dproperty=liquibase.version -DnewVersion=master-SNAPSHOT

      - name: Build and Package
        run: mvn -B dependency:go-offline clean package -DskipTests=true

      - name: Get Artifact ID
        id: get-artifact-id
        run: echo "::set-output name=artifact_id::$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)"

      - name: Save Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.get-artifact-id.outputs.artifact_id }}-artifacts
          path: |
            target/*

      - name: Save Event File
        uses: actions/upload-artifact@v3
        with:
          name: Event File
          path: ${{ github.event_path }}

    outputs:
      artifact_id: ${{ steps.get-artifact-id.outputs.artifact_id }}

  unit-test:
    strategy:
      fail-fast: false
      matrix:
        java: ${{fromJson(inputs.java || '[8, 11, 17, 18]')}}
        os: ${{fromJson(inputs.os || '["ubuntu-latest", "windows-latest"]')}}
    name: Test Java ${{ matrix.java }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'

      # look for dependencies in maven
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "false"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "false"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              },
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              }
            ]
            
      - uses: actions/download-artifact@v3
        with:
          name: ${{needs.build.outputs.artifact_id}}-artifacts
          path: ./target

      - name: Run Tests
        run: mvn -B jacoco:prepare-agent surefire:test

      - name: Archive Test Results - ${{ matrix.os }}
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-jdk-${{ matrix.java }}-${{ matrix.os }}
          path: |
            **/target/surefire-reports
            **/target/jacoco.exec

  sonar-pr:
    needs: [ unit-test ]
    uses: liquibase/build-logic/.github/workflows/sonar-pull-request.yml@v0.4.5
    secrets: inherit
