name: SDKMAN Release Tracking

on:
  workflow_call:
    inputs:
      version:
        description: "Version to check on SDKMAN"
        required: true
        type: string
  workflow_dispatch:
    inputs:
      version:
        description: "Version to check on SDKMAN"
        required: true
        type: string

permissions:
  contents: read

jobs:
  check-sdkman-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check SDKMAN for version availability
        id: check-version
        run: |
          VERSION="${{ inputs.version }}"
          echo "Checking SDKMAN for Liquibase version: $VERSION"
          
          # Check if version is available on SDKMAN website
          RESPONSE=$(curl -s "https://sdkman.io/sdks/" | grep -o "Liquibase ($VERSION)" || echo "")
          
          if [ -n "$RESPONSE" ]; then
            echo "Version $VERSION is available on SDKMAN"
            echo "available=true" >> $GITHUB_OUTPUT
            echo "status_message=✅ Liquibase v$VERSION is now available on SDKMAN!" >> $GITHUB_OUTPUT
            echo "status_color=good" >> $GITHUB_OUTPUT
          else
            echo "Version $VERSION is not yet available on SDKMAN"
            echo "available=false" >> $GITHUB_OUTPUT
            echo "status_message=⏳ Liquibase v$VERSION is not yet available on SDKMAN. Will check again later." >> $GITHUB_OUTPUT
            echo "status_color=warning" >> $GITHUB_OUTPUT
          fi

      - name: Send Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.DOCKER_SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: sdkman-updates
          SLACK_USERNAME: SDKMAN Release Bot
          SLACK_ICON_EMOJI: ':sdk:'
          SLACK_TITLE: SDKMAN Release Check for v${{ inputs.version }}
          SLACK_MESSAGE: ${{ steps.check-version.outputs.status_message }}
          SLACK_COLOR: ${{ steps.check-version.outputs.status_color }}
