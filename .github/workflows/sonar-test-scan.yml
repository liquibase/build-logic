name: Sonar Scan

on:
  workflow_call:
    inputs:
      thisBranchName:
        description: 'The name of the branch to be scanned'
        type: string
        required: true
      liquibaseBranchName:
        description: 'The name of the liquibase branch to be scanned'
        type: string
        required: true
      thisSha:
        description: 'The sha of the branch to be scanned'
        type: string
        required: true
      pullRequestNumber:
        description: 'The pull request number to be scanned'
        type: string
        required: false
      pullRequestBranchName:
        description: 'The name of the pull request branch to be scanned'
        type: string
        required: false
      pullRequestBaseBranchName:
        description: 'The name of the pull request base branch to be scanned'
        type: string
        required: false
      mavenArgs:
        description: 'The maven arguments to be passed to the mvn command'
        type: string
        required: false
      unitTestReportArtifactName:
        description: 'The name of the unit test report artifact'
        type: string
        required: false
      integrationTestReportArtifactName:
        description: 'The name of the integration test report artifact'
        type: string
        required: false
      coverageModuleName:
        description: 'The name of the coverage module'
        type: string
        required: false

env:
  MAVEN_VERSION: '3.8.7'

jobs:
  sonar-push:
    name: Sonar Scan
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
          overwrite-settings: false

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: ${{ env.MAVEN_VERSION }}

      - name: Set up Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "false"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "false"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              },
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              }
            ]

      - name: Download unit tests report
        uses: dawidd6/action-download-artifact@v2.27.0
        with:
          name: ${{ inputs.unitTestReportArtifactName }}
          if_no_artifact_found: warn

      - name: Download mssql integration tests report
        uses: dawidd6/action-download-artifact@v2.27.0
        with:
          name: ${{ inputs.integrationTestReportArtifactName }}-mssql
          if_no_artifact_found: warn

      - name: Download mysql integration tests report
        uses: dawidd6/action-download-artifact@v2.27.0
        with:
          name: ${{ inputs.integrationTestReportArtifactName }}-mysql
          if_no_artifact_found: warn

      - name: Download oracle integration tests report
        uses: dawidd6/action-download-artifact@v2.27.0
        with:
          name: ${{ inputs.integrationTestReportArtifactName }}-oracle
          if_no_artifact_found: warn

      - name: Download postgresql integration tests report
        uses: dawidd6/action-download-artifact@v2.27.0
        with:
          name: ${{ inputs.integrationTestReportArtifactName }}-postgresql
          if_no_artifact_found: warn

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Merge integration and unit tests reports
        run: |
          cd ${{ inputs.coverageModuleName }}
          mvn jacoco:report-aggregate@report-aggregate 
          mvn jacoco:merge@merge-results

      - name: Sonar Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          LIQUIBASE_PRO_LICENSE_KEY: ${{ secrets.PRO_LICENSE_KEY }}
        run: |
          mvn -B package -DskipTests sonar:sonar -P '!run-proguard' -DskipTests -Dliquibase.version=${{ inputs.liquibaseBranchName }}-SNAPSHOT \
          ${{ inputs.mavenArgs  }} \
          -Dsonar.scm.revision=${{ inputs.thisSha }} \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.java.coveragePlugin=jacoco \
          -Dsonar.branch.name=${{ inputs.thisBranchName}} \
          -Dsonar.pullrequest.key=${{ inputs.pullRequestNumber}} \
          -Dsonar.pullrequest.branch=${{ inputs.pullRequestBranchName}} \
          -Dsonar.pullrequest.base=${{ inputs.pullRequestBaseBranchName }} \
          -Dsonar.pullrequest.provider=GitHub \
          -Dsonar.pullrequest.github.repository="${{ github.repository }}" \
          -Dsonar.pullrequest.github.endpoint='https://api.github.com/' \
          -Dsonar.qualitygate.wait=true \
          -Dsonar.organization=${{ github.repository_owner }} \
          -Dsonar.host.url='https://sonarcloud.io' \
          -Dsonar.scm.provider=git \
          -Daws.region="us-east-1" \
          -T 1C
