name: SonarQube Scan
on:
  workflow_call:

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # -------- Build on Java 8 --------
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - name: Configure Maven repositories (for private deps)
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: |
            [
              {
                "id": "premier-api",
                "url": "https://maven.pkg.github.com/liquibase/premier-api",
                "releases": {"enabled":"true"},
                "snapshots": {"enabled":"true","updatePolicy":"always"}
              }
            ]
          servers: |
            [
              {
                "id": "premier-api",
                "username": "liquibot",
                "password": "${{ env.LIQUIBOT_PAT_GPM_ACCESS }}"
              }
            ]

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build (Java 8 toolchain)
        run: |
          # If your POM isn't already set, you can enforce Java 8 bytecode with:
          # mvn -B -V -DskipTests verify -Dmaven.compiler.release=8
          mvn -B -V verify

      # -------- Switch to Java 17 just for Sonar --------
      - name: Set up JDK 17 (for Sonar)
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run Sonar analysis (Java 17 runtime)
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
        run: |
          mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.1.2184:sonar \
            -Dsonar.projectKey=liquibase_liquibase-io-runner
